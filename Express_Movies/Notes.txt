
URL	HTTP Verb	Action	Used For	Mongoose Model Function
/fruits/	GET	index	Displaying a list of all fruits	.find
/fruits/new	GET	new	Display HTML form for creating a new fruit	N/A
/fruits	POST	create	Create a new fruit	.create
/fruits/:id	GET	show	Display a specific fruit	.findById
/fruits/:id/edit	GET	edit	Return an HTML form for editing a fruit	.findById
/fruits/:id	PATCH/PUT	update	Update a specific fruit	.findByIdAndUpdate
/fruits/:id	DELETE	destroy	Delete a specific fruit	.findByIdAndDelete

URL	HTTP Verb	Action	Used For	Mongoose Model Function
/logs/	GET	index	Displaying a list of all logs	.find
/logs/new	GET	new	Display HTML form for creating a new log	N/A
/logs	POST	create	Create a new log	.create
/logs/:id	GET	show	Display a specific log	.findById
/logs/:id/edit	GET	edit	Return an HTML form for editing a log	.findById
/logs/:id	PATCH/PUT	update	Update a specific log	.findByIdAndUpdate
/logs/:id	DELETE	destroy	Delete a specific log	.findByIdAndDelete
URL	HTTP Verb	Action	Used For	Mongoose Model Function

/things/	GET	index	Displaying a list of all things	.find
/things/new	GET	new	Display HTML form for creating a new thing	N/A
/things	POST	create	Create a new thing	.create
/things/:id	GET	show	Display a specific thing	.findById
/things/:id/edit	GET	edit	Return an HTML form for editing a thing	.findById
/things/:id	PATCH/PUT	update	Update a specific thing	.findByIdAndUpdate
/things/:id	DELETE	destroy	Delete a specific thing	.findByIdAndDelete

Seed Route: A route on our server when requested will delete everything in our database and re-seed it with some starter data
Seed File: A script we can run (usually called seed.js) that'll empty and re-seed our database.

Semantic Grouping Tags
<header></header>Intruductory content of the body, section, or article.
<main></main>Main Content of the body
<article></article>Self-Contained Content that can be distributed on its own and would make sense
<section></section>Thematically grouped content that is not distributable
<footer></footer>Closing, Conclusion or Ending Content of the body, section, or article.. Usually Copyright and Footer navigation information outside the main content of site
<nav></nav>Navigation links often a child of header or footer
<aside></aside>Indirectly related non vital content, usually used for sidebars.

Most used HTML tags
<h1></h1>Heading from h1 through h6
<p></p>Paragraph
<img src="imgsource" alt="alternative text"/>Image tags
<ul></ul>Unordered list and <ol></ol>ordered list
<li></li>A list item inside a list
<pre></pre>Preformatted text
<br/>Line break
<hr/>Horizontal Rule Tag
<a href="website to go to"> Text to display for link</a>Anchor tag to make hyperlinks
<em></em>Emphasis tag
<strong></strong>Strong text tag
<span></span>Inline text
<div></div>Non semantic division tag to designate a block of text, shouldn't be abused

Below you'll find a table that relates normal HTTPactions to our CRUD operators.
HTTP Action	CRUD Operator
GET	Read
POST	Create
PUT	Update
DELETE	Delete

Breaking It Down
Create
A Create or POSTcreates a new entry in a database that either you or someone else created. When we perform a POSTrequest, we send some amount of information to our data source, usually data from a form; and we create a new entry in the data source.

Read
The Reador GEToperation is something that you interact with every day. Whenever you pull information from an api, you are performing a GETrequest. GETrequests only allow users to view or read from a data source. This can be something as simple as you checking your email in the morning. We perform a GETrequest to a server and if everything goes OK we get some type of information or data back.

Update
Update or PUTworks very similar to a POSTrequest. We are still sending along some sort of data to our data source, but instead of creating a new entry, we are actually updating an existing entry. In order to this, we need to target that entry specifically, most of the times using an id. This allows us to send some new information to to our existing piece of data and overwrite it's existing attributes.

Delete
Delete does just as the name implies, it DELETE's something from our data source. We target the specific piece of information in the same way we did with our PUTrequest. This sends a request to the server to DELETEthis item.

Seperation of concerns should make functionality be put with similar functionality.